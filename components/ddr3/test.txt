class ddr3(Module):
    def __init__(self):
        self.axi0_awsize = Signal(3)
        self.DQS = Signal(2)
        self.axi0_arsize = Signal(3)
        self.SHIELD0 = Signal()
        self.axi0_arlock = Signal(2)
        self.axi0_awid = Signal(4)
        self.axi0_rresp = Signal(2)
        self.axi0_wvalid = Signal()
        self.axi0_arvalid = Signal()
        self.axi0_awburst = Signal(2)
        self.axi0_bvalid = Signal()
        self.axi0_arready = Signal()
        self.axi0_awlen = Signal(8)
        self.SYS_CLK = Signal()
        self.axi0_awcache = Signal(4)
        self.axi0_araddr = Signal(32)
        self.SYS_RESET_N = Signal()
        self.axi0_awaddr = Signal(32)
        self.CTRLR_READY = Signal()
        self.RESET_N = Signal()
        self.CAS_N = Signal()
        self.CKE = Signal()
        self.CK0 = Signal()
        self.axi0_arburst = Signal(2)
        self.SHIELD1 = Signal()
        self.BA = Signal(3)
        self.axi0_rvalid = Signal()
        self.axi0_wdata = Signal(64)
        self.axi0_awlock = Signal(2)
        self.PLL_REF_CLK = Signal()
        self.axi0_rid = Signal(4)
        self.A = Signal(15)
        self.axi0_arprot = Signal(3)
        self.axi0_bid = Signal(4)
        self.CK0_N = Signal()
        self.PLL_LOCK = Signal()
        self.WE_N = Signal()
        self.CS_N = Signal()
        self.axi0_awready = Signal()
        self.axi0_bready = Signal()
        self.RAS_N = Signal()
        self.axi0_wstrb = Signal(8)
        self.DM = Signal(2)
        self.axi0_awvalid = Signal()
        self.axi0_bresp = Signal(2)
        self.DQ = Signal(16)
        self.DQS_N = Signal(2)
        self.axi0_wlast = Signal()
        self.ODT = Signal()
        self.axi0_arid = Signal(4)
        self.axi0_rdata = Signal(64)
        self.axi0_wready = Signal()
        self.axi0_rready = Signal()
        self.axi0_arlen = Signal(8)
        self.axi0_rlast = Signal()
        self.axi0_arcache = Signal(4)
        self.axi0_awprot = Signal(3)

        # # #

        self.specials += Instance("ddr3",
            i_axi0_awsize=self.axi0_awsize,
            io_DQS=self.DQS,
            i_axi0_arsize=self.axi0_arsize,
            o_SHIELD0=self.SHIELD0,
            i_axi0_arlock=self.axi0_arlock,
            i_axi0_awid=self.axi0_awid,
            o_axi0_rresp=self.axi0_rresp,
            i_axi0_wvalid=self.axi0_wvalid,
            i_axi0_arvalid=self.axi0_arvalid,
            i_axi0_awburst=self.axi0_awburst,
            o_axi0_bvalid=self.axi0_bvalid,
            o_axi0_arready=self.axi0_arready,
            i_axi0_awlen=self.axi0_awlen,
            o_SYS_CLK=self.SYS_CLK,
            i_axi0_awcache=self.axi0_awcache,
            i_axi0_araddr=self.axi0_araddr,
            i_SYS_RESET_N=self.SYS_RESET_N,
            i_axi0_awaddr=self.axi0_awaddr,
            o_CTRLR_READY=self.CTRLR_READY,
            o_RESET_N=self.RESET_N,
            o_CAS_N=self.CAS_N,
            o_CKE=self.CKE,
            o_CK0=self.CK0,
            i_axi0_arburst=self.axi0_arburst,
            o_SHIELD1=self.SHIELD1,
            o_BA=self.BA,
            o_axi0_rvalid=self.axi0_rvalid,
            i_axi0_wdata=self.axi0_wdata,
            i_axi0_awlock=self.axi0_awlock,
            i_PLL_REF_CLK=self.PLL_REF_CLK,
            o_axi0_rid=self.axi0_rid,
            o_A=self.A,
            i_axi0_arprot=self.axi0_arprot,
            o_axi0_bid=self.axi0_bid,
            o_CK0_N=self.CK0_N,
            o_PLL_LOCK=self.PLL_LOCK,
            o_WE_N=self.WE_N,
            o_CS_N=self.CS_N,
            o_axi0_awready=self.axi0_awready,
            i_axi0_bready=self.axi0_bready,
            o_RAS_N=self.RAS_N,
            i_axi0_wstrb=self.axi0_wstrb,
            o_DM=self.DM,
            i_axi0_awvalid=self.axi0_awvalid,
            o_axi0_bresp=self.axi0_bresp,
            io_DQ=self.DQ,
            io_DQS_N=self.DQS_N,
            i_axi0_wlast=self.axi0_wlast,
            o_ODT=self.ODT,
            i_axi0_arid=self.axi0_arid,
            o_axi0_rdata=self.axi0_rdata,
            o_axi0_wready=self.axi0_wready,
            i_axi0_rready=self.axi0_rready,
            i_axi0_arlen=self.axi0_arlen,
            o_axi0_rlast=self.axi0_rlast,
            i_axi0_arcache=self.axi0_arcache,
            i_axi0_awprot=self.axi0_awprot,
        )

